<UserControl x:Class="MATURIXSHIFTPROJECT.Views.NewShiftView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:MATURIXSHIFTPROJECT.Views"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="Transparent">
    <UserControl.Resources>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="IsReadOnly" Value="True" />
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background"
                         Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border"
                         Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background"
                         Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border"
                         Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background"
                         Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border"
                         Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background"
                         Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border"
                         Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                         Color="#FF838383" />
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />

            <Setter Property="Background"
                    Value="#fc5603" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true"
                                CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#ff7c3b" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#fc5603" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Label Content="New Shift"
           Grid.Column="1"
           Grid.ColumnSpan="2"
           Foreground="Black"
           HorizontalAlignment="Center"
           VerticalAlignment="Bottom"
           FontSize="30"
           Margin="0,0,0,0" />
        <TextBlock Grid.Row="3"
                   Grid.Column="1"
                   Text="From"
                   FontSize="30"
                   Foreground="Black" 
                   Margin="0,0,0,0"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Bottom"/>
        <DatePicker Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                    Margin="0,0,0,0" MinHeight="50" DisplayDateStart="{x:Static sys:DateTime.Today}"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    SelectedDateFormat="Long" FontSize="25" SelectedDate="{Binding DateTimeWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>



        <TextBlock Text="Time (HH:mm)"
                   Margin="0,0,0,50"
                   FontSize="10"  Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="Gray"/>

        <xctk:MaskedTextBox Name="TimeMaskedTextBox"
                            Mask="00:00"
                            PromptChar=" "
                            Grid.Row="3"
                            Grid.Column="1"
                            MinHeight="50"
                            MaxWidth="90"
                            Margin="50,0,50,0"
                            FontSize="25"
                            GotFocus="TimeMaskedTextBox_GotFocus"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Text="{Binding StartTimeString, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>




        <TextBlock Grid.Row="3"
                   Grid.Column="2"
                   Text="To"
                   FontSize="30"
                   Foreground="Black"
                   Margin="10,0,0,0" 
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Bottom"/>
        <!--<DatePicker Grid.Row="2"
                    Grid.Column="1"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Stretch"
                    Margin="100,0,-40,0"
                    MinHeight="30"
                    MaxHeight="30"
                    SelectedDateFormat="Long"

                    FontSize="20" />-->



        <TextBlock Text="Time (HH:mm)"
                   Margin="20,0,0,50"
                   FontSize="10"
                   Grid.Column="2" Grid.Row="3"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Center"
                   Foreground="Gray"        
                   />

        <xctk:MaskedTextBox Name="ToTimeMaskedTextBox"
                            Mask="00:00"
                            PromptChar=" "
                            Grid.Row="3"
                            Grid.Column="2"
                            MinHeight="50"
                            MaxWidth="90"
                            Margin="60,0,40,0"
                            FontSize="25"
                            GotFocus="TimeMaskedTextBox_GotFocus"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Text="{Binding EndTimeString, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>


        <StackPanel Grid.Row="4" Grid.Column="1"
            Orientation="Horizontal"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Stretch"
            Margin="0,0,0,0">
        <TextBlock Text="Repeat every week"
               FontSize="30"
               VerticalAlignment="Center"
               Margin="0,0,0,0"/>
            <CheckBox IsChecked="{Binding CheckBoxIsChecked, Mode=TwoWay}"
              VerticalAlignment="Center"
                      Margin="20,0,0,12">
                <CheckBox.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="2" ScaleY="2" />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </CheckBox.RenderTransform>
            </CheckBox>
            <TextBlock Grid.Row="4"
           Grid.Column="2"
           Text="Until"
           FontSize="30"
           Margin="25,0,0,0"
           HorizontalAlignment="Stretch"
           VerticalAlignment="Bottom"/>

            
        </StackPanel>



        
        <DatePicker Grid.Row="4"
                    Grid.Column="2"
                    Margin="10,0,0,0"
                    MinHeight="50"
                    SelectedDateFormat="Long"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    DisplayDateStart="{x:Static sys:DateTime.Today}"
                    FontSize="25" 
                   SelectedDate="{Binding SelectedRepeatEndDateTime, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Grid.Row="5" Grid.Column="1" MaxWidth="305" Grid.ColumnSpan="2" Content="Confirm" FontSize="25" MinHeight="50" Margin="90,0,90,0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Command="{Binding SubmitClickCommand}" CommandParameter="{Binding}"/>

        
        <ComboBox x:Name="CategoryCB"
            VerticalContentAlignment="Center"
            HorizontalContentAlignment="Center"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"      
            FontSize="25"
            MinHeight="50"
            Grid.Column="2" 
            Margin="10,0,0,0" Grid.Row="1"
            ItemsSource="{Binding Categories, UpdateSourceTrigger=PropertyChanged}"  
            SelectedItem="{Binding SelectedCategory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            />
        
        <ComboBox x:Name="EmployeeCB" Margin="0,0,10,0" Grid.Row="1"
            VerticalContentAlignment="Center"
            HorizontalContentAlignment="Center"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom" Grid.Column="1" 
            MinHeight="50" FontSize="25"
            ItemsSource="{Binding Employees, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding SelectEmployee, Mode=TwoWay}"
                  
            />




    </Grid>

</UserControl>
